{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Adnan\\\\React Cource\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\n  };\n  const handleOnChange = event => {\n    console.log(\"On Change\");\n    setText(event.target.value);\n  };\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\n  };\n  const handleCrClick = () => {\n    let newText = \"\";\n    setText(newText);\n  };\n  const handleTeClick = () => {\n    let newText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n    setText(newText);\n  };\n  const handleExtraSpace = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  };\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleTeClick,\n        children: \"Convert to Titlecase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleCrClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleExtraSpace,\n        children: \"Removes Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text Sumary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", text.split(\" \").length, \" of Words and \", text.length, \" of Characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something in text area to preview here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleOnChange","event","console","log","target","value","handleLoClick","toLowerCase","handleCrClick","handleTeClick","charAt","slice","handleExtraSpace","split","join","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Adnan/React Cource/my-app/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\" , \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\" , \"success\");\r\n    } \r\n    const handleCrClick = () =>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n    } \r\n    const handleTeClick = () =>{\r\n        let newText = text.charAt(0).toUpperCase() + text.slice (1).toLowerCase ();\r\n        setText(newText)\r\n    } \r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    } \r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>     \r\n        <div className=\"mb-3\">\r\n            <h1>{props.heading}</h1>\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white' , color :props.mode==='dark'?'white':'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleTeClick}>Convert to Titlecase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCrClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Removes Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-2\"style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text Sumary</h2>\r\n        <p> {text.split(\" \").length} of Words and {text.length} of Characters</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter something in text area to preview here\"}</p>\r\n    </div>\r\n    </>\r\n    \r\n    \r\n\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}